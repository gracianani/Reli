

@model ReliDemo.ViewModels.StationAnalizeViewModel
@{
    ViewBag.Title = "PreviewStationAnalize";

    Layout = "~/Views/Shared/_Layout.cshtml";
}

<a href="/Reports/Index" class="btn btn-primary">返回</a>
<h2 style='font-family: "Microsoft Yahei",sans-serif;
font-size: 24px;
margin-bottom: 0.9em;
line-height: 30px;'>
    @Model.Title<span style="font-size:14px">@Model.From.ToString("yyyy年MM月dd日") - @Model.To.ToString("yyyy年MM月dd日")</span>
</h2>
<div class="row-fluid">
    @Html.DropDownList("companyId", new SelectList(Model.Companies, "Id", "Name", Model.SelectedCompanyId), new { @class = "span2" })
    <text>&nbsp;</text>
    @Html.DropDownList("managershipId", new SelectList(Model.Managerships, "Id", "Name", Model.SelectedManagershipId), "全部中心", new { id = "managershipId", @class = "span2" })
    <text>&nbsp;</text>
    @Html.DropDownList("热源", new SelectList(ReliDemo.Infrastructure.Helpers.ChargeHelper.含所有热源, "Key", "Value", Model.热源), new { id = "heatsources", @class = "span2" })
    <text>&nbsp;</text>
    @Html.DropDownList("收费性质", new SelectList(ReliDemo.Infrastructure.Helpers.ChargeHelper.含所有收费性质, "Key", "Value", Model.收费性质), new { @class = "span2" })
    <text>&nbsp;</text>
    @Html.DropDownList("是否重点站", new SelectList(ReliDemo.Infrastructure.Helpers.ChargeHelper.是否重点站, "Id", "Name", Model.是否重点站), new { @class = "span2" })
    <text>&nbsp;</text>
    @Html.DropDownList("数据来源", new SelectList(ReliDemo.Infrastructure.Helpers.ChargeHelper.含所有数据来源, "Key", "Value", Model.数据来源), new { @class = "span2" })
</div>
<div class="row-fluid">
    <div class="input-prepend date">
        <span class="add-on"><i class="icon-calendar"></i></span>
        <input type="text" class="form-control date-picker input-small" id="report-date" name="date" data-date-format="yyyy-mm-dd" value=@Model.From.ToString("yyyy-MM-dd") data-provide="datepicker-inline" />
        <input type="text" class="form-control date-picker input-small" id="report-dateTo" name="date" data-date-format="yyyy-mm-dd" value=@Model.To.ToString("yyyy-MM-dd") data-provide="datepicker-inline" />
    </div>
   
    <a id="preview" href="javascript:void(0)" class="btn btn-primary" data-reporttype="@Model.ReportTypeId">预览</a>
    <a id="download" href="javascript:void(0)" class="btn btn-primary" data-reporttype="@Model.ReportTypeId">下载</a>

    <div id="validationErrorReport" class="alert alert-error hidden inline" style="display:inline">请填写“时间”。</div>
</div>
<div class="alert alert-info clearfix">
    <div style="display:inline-block;float:left;position:relative;top:5px;"> 查询结果：数据 @Model.TotalCount 条。 每页显示：</div>
    <ul class="nav nav-pills" id="pills" style="float:left;display:inline-block;margin-bottom:0;">
        <li @if (Model.PageSize == 10) { <text> class="active" </text>     }>
            @Html.ActionLink("10", "PreviewStationAnalize", new
        {
            reportType = Model.ReportTypeId,
            dateFrom = Model.From.ToString("yyyy-MM-dd"),
            dateTo = Model.To.ToString("yyyy-MM-dd"),
            pageIndex = Model.PageIndex,
            pageSize = 10,
            companyId = Model.SelectedCompanyId,
            managerShipId = Model.SelectedManagershipId,
            热源 = Model.热源,
            收费性质 = Model.收费性质,
            是否重点站 = Model.是否重点站,
            数据来源 = Model.数据来源
        })
                </li>
                <li @if (Model.PageSize == 50) { <text> class="active" </text>     }>
                    @Html.ActionLink("50", "PreviewStationAnalize", new
        {
            reportType = Model.ReportTypeId,
            dateFrom = Model.From.ToString("yyyy-MM-dd"),
            dateTo = Model.To.ToString("yyyy-MM-dd"),
            pageIndex = Model.PageIndex,
            pageSize = 50,
            companyId = Model.SelectedCompanyId,
            managerShipId = Model.SelectedManagershipId,
            热源 = Model.热源,
            收费性质 = Model.收费性质,
            是否重点站 = Model.是否重点站,
            数据来源 = Model.数据来源
        })
                </li>
                <li @if (Model.PageSize == 100) { <text> class="active" </text>     }>
                    @Html.ActionLink("100", "PreviewStationAnalize", new
        {
            reportType = Model.ReportTypeId,
            dateFrom = Model.From.ToString("yyyy-MM-dd"),
            dateTo = Model.To.ToString("yyyy-MM-dd"),
            pageIndex = Model.PageIndex,
            pageSize = 100,
            companyId = Model.SelectedCompanyId,
            managerShipId = Model.SelectedManagershipId,
            热源 = Model.热源,
            收费性质 = Model.收费性质,
            是否重点站 = Model.是否重点站,
            数据来源 = Model.数据来源
        })
        </li>
    </ul>
</div>


<div class="scrollableTableContainer">
    @{
        <table class="table  table-bordered table-hover  table-condensed table-clickhighlight datatable" style="background:white">
            <tr>
                <th rowspan="2">序号</th>
                <th rowspan="2">热力站名称</th>
                <th rowspan="2">分公司</th>
                <th rowspan="2">管理单位</th>
                <th rowspan="2">站面积</th>
                <th rowspan="2">参考热指标</th>
                <th rowspan="2">数据来源</th>
                <th rowspan="2">是否重点站</th>
                <th rowspan="2">收费性质</th>
                <th rowspan="2">生产热源</th>
                <th>统计天数</th>
                <th>有效天数</th>
                <th>无效天数</th>
                <th>超标天数</th>
                <th>未超标天数</th>
                <th>站天数到位率</th>
                <th>站有效数据率</th>
                <th>站无效数据率</th>
                <th>站天数超标率</th>
                <th>有效日计划供热量</th>
                <th>有效日核算供热量</th>	
                <th>有效日实际供热量</th>
                <th>有效日供热总面积</th>	
                <th>超标日总供热面积</th>
                <th>未超标日总供热面积</th>
            </tr>
            <tr>
                <th>统计区间天数（基本上是121天，后加的400个智能卡站按实际天数计算）</th>
                <th>有效数据天数</th>	
                <th>无效数据天数</th>	
                <th>有效 实际超核算天数</th>	
                <th>实际未超核算天数</th>	
                <th>&nbsp;</th>
                <th>&nbsp;</th>
                <th>&nbsp;</th>
                <th>&nbsp;</th>
                <th>所有有效日计划热量和</th>
                <th>所有有效日核算热量和</th>	
                <th>所有有效日实际热量和</th>	
                <th>所有有效日实际供热面积和</th>	
                <th>所有超标日投入面积和</th>	
                <th>所有未超标日投入面积和</th>
            </tr>
            @foreach (var item in Model.ReportData)
            {
                <tr>
                    <td>
                        @(Model.ReportData.IndexOf(item)+1)
                    </td>
                    <td>@item.热力站名称</td>
                    <td>@item.分公司</td>
                    <td>@item.管理单位</td>
                    <td>@item.站面积</td>
                    <td>@item.参考热指标</td>
                    <td>@item.数据来源</td>
                    <td>@if(item.是否重点站){ <text>是</text> } else{ <text>否</text> }</td>
                    <td>@item.收费性质</td>
                    <td>@item.生产热源</td>
                    <td>@item.统计天数</td>
                    <td>@item.有效天数</td>
                    <td>@item.无效天数</td>
                    <td>@item.超标天数</td>
                    <td>@item.未超标天数</td>
                    <td>@item.站天数到位率</td>
                    <td>@item.站有效数据率</td>
                    <td>@item.站无效数据率</td>
                    <td>@item.站天数超标率</td>
                    <td>@item.有效日计划供热量</td>
                    <td>@item.有效日核算供热量</td>
                    <td>@item.有效日实际供热量</td>
                    <td>@item.有效日供热总面积</td>
                    <td>@item.超标日总供热面积</td>
                    <td>@item.未超标日总供热面积</td>
                </tr>
            }
        </table>
    }
</div>


<div class="row-fluid">
    <div class="pagination pagination-centered">
        <ul>

            @if (Model.PageIndex >= 10)
            {
                <li>
                    @Html.ActionLink("« 前十页", "PreviewStationAnalize", new
           {
               reportType = Model.ReportTypeId,
               dateFrom = Model.From.ToString("yyyy-MM-dd"),
               dateTo = Model.To.ToString("yyyy-MM-dd"),
               pageIndex = Model.PageIndex - 10,
               pageSize = Model.PageSize,
               companyId = Model.SelectedCompanyId,
               managerShipId = Model.SelectedManagershipId,
               热源 = Model.热源,
               收费性质 = Model.收费性质,
               是否重点站 = Model.是否重点站,
               数据来源 = Model.数据来源
           })
            </li>
            }
            <li>
                @Html.ActionLink("« 上一页", "PreviewStationAnalize", new
  {
      reportType = Model.ReportTypeId,
      dateFrom = Model.From.ToString("yyyy-MM-dd"),
      dateTo = Model.To.ToString("yyyy-MM-dd"),
      pageIndex = Model.PageIndex - 1,
      pageSize = Model.PageSize,
      companyId = Model.SelectedCompanyId,
      managerShipId = Model.SelectedManagershipId,
      热源 = Model.热源,
      收费性质 = Model.收费性质,
      是否重点站 = Model.是否重点站,
      数据来源 = Model.数据来源
  })
        </li>
        @for (int i = Model.PageIndex / 10 * 10; (i < Model.PageIndex / 10 * 10 + 10) && i < Model.TotalPages; i++)
        {
            <li @if (Model.PageIndex == i) { <text> class="active" </text>  }>

                @Html.ActionLink((i + 1).ToString(), "PreviewStationAnalize", new
           {
               reportType = Model.ReportTypeId,
               dateFrom = Model.From.ToString("yyyy-MM-dd"),
               dateTo = Model.To.ToString("yyyy-MM-dd"),
               pageIndex = i,
               pageSize = Model.PageSize,
               companyId = Model.SelectedCompanyId,
               managerShipId = Model.SelectedManagershipId,
               热源 = Model.热源,
               收费性质 = Model.收费性质,
               是否重点站 = Model.是否重点站,
               数据来源 = Model.数据来源
           })
            </li>
        }
        <li>
            @Html.ActionLink("下一页 »", "PreviewStationAnalize", new
 {
     reportType = Model.ReportTypeId,
     dateFrom = Model.From.ToString("yyyy-MM-dd"),
     dateTo = Model.To.ToString("yyyy-MM-dd"),
     pageIndex = Model.PageIndex +1,
     pageSize = Model.PageSize,
     companyId = Model.SelectedCompanyId,
     managerShipId = Model.SelectedManagershipId,
     热源 = Model.热源,
     收费性质 = Model.收费性质,
     是否重点站 = Model.是否重点站,
     数据来源 = Model.数据来源
 })
    </li>
    @if (Model.PageIndex < Model.TotalPages - 10)
    {
        <li>
            @Html.ActionLink("后十页 »", "PreviewStationAnalize", new
           {
               reportType = Model.ReportTypeId,
               dateFrom = Model.From.ToString("yyyy-MM-dd"),
               dateTo = Model.To.ToString("yyyy-MM-dd"),
               pageIndex = (Model.PageIndex / 10 + 1) * 10,
               pageSize = Model.PageSize,
               companyId = Model.SelectedCompanyId,
               managerShipId = Model.SelectedManagershipId,
               热源 = Model.热源,
               收费性质 = Model.收费性质,
               是否重点站 = Model.是否重点站,
               数据来源 = Model.数据来源
           })
    </li>
    }

</ul>
</div>
</div>

<script>
    $(function () {

        $('#download').click(function (e) {
            var url = 'DownloadStationAnalize?' +
                'dateFrom=' + $("#report-date").val() +
                '&dateTo=' + $('#report-dateTo').val() +
                '&companyId=' + $('select[name=companyId]').val() +
                '&managershipId=' + $('select[name=managershipId]').val() +
                '&热源=' + $('select[name=热源]').val() +
                '&收费性质=' + $('select[name=收费性质]').val() +
                '&是否重点站=' + $('select[name=是否重点站]').val() +
                '&数据来源=' + $('select[name=数据来源]').val();
            if (!$("#report-date").val() || !$("#report-dateTo").val()) {
                if ($("#validationErrorReport").hasClass("hidden")) {
                    $("#validationErrorReport").removeClass("hidden");
                }
                return;
            }
            else {
                $("#validationErrorReport").addClass("hidden");
            }
            var self = this;
            if ($(this).hasClass("disabled")) {
                return;
            }

            $.ajax({
                url: url,
                beforeSend: function () {
                    $(self).html("正在生成报表...").addClass("disabled");
                },
                success: function (i) {
                    if (i.fileName != "") {
                        window.location = i.fileName;
                    }
                    else {
                        $(self).html("生成报表出错");
                    }
                },
                error : function(i)
                {
                    $(self).html("生成报表出错");
                },
                complete: function() {
                    $(self).html('下载').removeClass("disabled");;
                }
            })
        ;
        });
        $("select[name=companyId]").change(function () {
            $.ajax({
                url: "/Stations/GetManagershipsByCompanyId",
                type: "post",
                data: { companyId: $(this).val() },
                success: function (response, textStatus, jqXHR) {
                    console.log(response);
                    $("#managershipId").html("<option value>全部中心</option>" + response.replace(/(^\s+|\s+$)/g, '')).css("display", "");
                },
                error: function (jqXHR, textStatus, errorThrown) {
                },
                complete: function () {
                }
            });
        });
        $('#preview').click(
            function () {
                var url = '/Reports/PreviewStationAnalize?' +
                'reportType=' + $(this).attr("data-reporttype") +
                '&dateFrom=' + $("#report-date").val() +
                '&dateTo=' + $('#report-dateTo').val() +
                '&companyId=' + $('select[name=companyId]').val() +
                '&managershipId=' + $('select[name=managershipId]').val() +
                '&热源=' + $('select[name=热源]').val() +
                '&收费性质=' + $('select[name=收费性质]').val() +
                '&是否重点站=' + $('select[name=是否重点站]').val() +
                '&数据来源=' + $('select[name=数据来源]').val();
                if (!$("#report-date").val() || !$("#report-dateTo").val()) {
                    if ($("#validationErrorReport").hasClass("hidden")) {
                        $("#validationErrorReport").removeClass("hidden");
                    }
                    return;
                }
                else {
                    $("#validationErrorReport").addClass("hidden");
                }
                var self = this;
                if ($(this).hasClass("disabled")) {
                    return;
                }
                window.location.href = url;
            }
        );
    });
</script>